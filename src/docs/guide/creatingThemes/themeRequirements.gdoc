The Themes must conform to the following specification.

h3. Required Layout Names

All themes must supply a minimum set of standard layouts.

Failure to do so means that plugins that rely on any missing layouts will break. However themes can provide a superset of the
required themes - so this list of required layouts is kept to a bare minimum.

Each required layout also has a list of required zone names|guide:themeRequiredZones], so that plugins and apps know what they can/should provide for each.

The required layouts are:

* home
* main
* dialog
* dataentry
* report
* sidebar

The requirements and user expectations of each layout are set out below.

If a theme does not support a given layout or zone this in itself is not a major problem - application developers will choose the theme that does what they require, and may provide a replacement layout in their application.

However all themes should support all the layouts and their zones if they wish to be used as general-purpose themes.

h3. Rendering of Resources

All Theme layouts *must* use the Resources plugin mechanisms to render their resources and those of the UI Set they use. The UI Set will typically include the resources in needs on demand, but your Theme *must* include the required @r:layoutResources@ tags. This is handled for you automatically if you use the [head|themeTags] theme tag.

h3. Rendering of Title

The [title|themeTags] theme tag is used by GSP pages to set the current page title using standard Platform Core i18n resolution mechanism (using the @p:text@ rules).

As such, the Theme layouts must use this information to render the @\<title\>@ tag of the page and are responsible for rendering the @\<h1\>@ or equivalent heading in the content of the page automatically

GSP pages do not know where to place the title of the page shown in the content area, as this is up to the Theme layout.

As such they simply specify what the title is, and the layout has to "do the right thing" by creating a relevant @div@ or heading tag.

h3. Default content

Themes allow you to supply default content for each zone that shows off the theme at its best, so that application developers can get a taste for how their app might really look when using your theme correctly.

This is also useful for content that is typically the same in all your layouts (i.e. navigation, footers) that you still would like the application developer to be able to override by supplying content for that zone or overriding the default GSP.

To define your own default content, simply place GSP templates in:

@/grails-app/views/\_themes/<ThemeName>/default/\_<zone-name>.gsp@

for defaults that apply to any Theme layout or:

@/grails-app/views/\_themes/<ThemeName>/default/<LayoutName>/\_<zone-name>.gsp@

for defaults that are specific to one of your named theme layouts.
