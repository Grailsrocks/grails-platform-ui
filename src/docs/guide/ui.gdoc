The UI API provides a set of tags for common UI elements, without tieing an application to any specific CSS or JavaScript library. 

The UI tags have implementations that come from a "UI Set" which is a convention-based collection of GSP templates.

!diagrams/ui_render.png!

This semantic identification of UI elements provides a level of abstraction from their actual HTML rendering. While HTML5 is a major step forward, we are still in a situation where UI elements are often built out of multiple markup tags which vary between CSS and JS frameworks. For this reason, we cannot have UI tags that render the actual HTML in a fixed way.

This allows plugins to provide high quality UI to your application, without relying on you to integrate the plugin views with your look and feel.

{note}
It is very important to understand that using these tags does not tie you to any UI library or specific look and feel. That is entirely down to the UI Set that your application/theme uses, and can be switched at runtime.
{note}

You no longer have to write your HTML markup to match specific CSS frameworks you are using. Use the UI tags and you can pair this with your own UI Set, or use an off the shelf one and leverage the theme system to get polished off-the-shelf UIs.

There are tags for rendering:

* fields
* buttons
* tabs
* navigation
* carousel
* tables
* pagination
* images
* messages
* branding info (company name, site name, logos)

Applications can choose which UI Set the tags should use, and this integrates with the theming mechanism so that code using the UI tags will render correctly according to the theme currently being used. In this instance the Theme selects the appropriate UI set.

The goal is to provide common web-application elements that can be rendered by your application and/or by themes. 

Only by standardising all these elements does theming becomes possible.

Note that you do not need to use Themes to benefit from UI tags. However, Themes can select the UI Set to use to render the tags, so that they use the correct HTML and CSS for the Theme.

UI Sets work with Resources plugin to automatically pull in the resources that the UI Set requires. For example the set of UI elements that require Twitter Bootstrap will pull in specific resource modules named by convention.
